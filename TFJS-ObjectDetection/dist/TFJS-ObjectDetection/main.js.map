{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"/* You can add styles to this file, and also import other style files */\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n  \\n  <h1>Tensorflow.js Real Time Object Detection</h1>\\n  \\n  <video hidden id=\\\"vid\\\" width=\\\"300\\\" height=\\\"300\\\"></video>\\n  <canvas id=\\\"canvas\\\"></canvas>\\n\\n</div>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n//import COCO-SSD model as cocoSSD\nimport * as cocoSSD from '@tensorflow-models/coco-ssd';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit \n{\n  title = 'TF-ObjectDetection';\n  private video: HTMLVideoElement;\n  \n\n  ngOnInit()\n  { \n    this.webcam_init();\n    this.predictWithCocoModel();\n  }\n\npublic async predictWithCocoModel(){\n  const model = await cocoSSD.load('lite_mobilenet_v2');\n  this.detectFrame(this.video,model);\n  console.log('model loaded');\n}\n\nwebcam_init()\n  {  \n  this.video = <HTMLVideoElement> document.getElementById(\"vid\");\n  \n     navigator.mediaDevices\n    .getUserMedia({\n    audio: false,\n    video: {\n      facingMode: \"user\",\n    }\n     })\n    .then(stream => {\n    this.video.srcObject = stream;\n    this.video.onloadedmetadata = () => {\n      this.video.play();\n    };\n    });\n  }\n  \n  detectFrame = (video, model) => {\n    model.detect(video).then(predictions => {\n      this.renderPredictions(predictions);\n      requestAnimationFrame(() => {\n        this.detectFrame(video, model);\n      });\n    });\n  }\n\n  renderPredictions = predictions => {\n    const canvas = <HTMLCanvasElement> document.getElementById(\"canvas\");\n    \n    const ctx = canvas.getContext(\"2d\");\n    \n    canvas.width  = 300;\n    canvas.height = 300;\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // Font options.\n    const font = \"16px sans-serif\";\n    ctx.font = font;\n    ctx.textBaseline = \"top\";\n    ctx.drawImage(this.video,0, 0,300,300);\n\n    predictions.forEach(prediction => {\n      const x = prediction.bbox[0];\n      const y = prediction.bbox[1];\n      const width = prediction.bbox[2];\n      const height = prediction.bbox[3];\n      // Draw the bounding box.\n      ctx.strokeStyle = \"#00FFFF\";\n      ctx.lineWidth = 2;\n      ctx.strokeRect(x, y, width, height);\n      // Draw the label background.\n      ctx.fillStyle = \"#00FFFF\";\n      const textWidth = ctx.measureText(prediction.class).width;\n      const textHeight = parseInt(font, 10); // base 10\n      ctx.fillRect(x, y, textWidth + 4, textHeight + 4);\n    });\n\n    predictions.forEach(prediction => {\n      const x = prediction.bbox[0];\n      const y = prediction.bbox[1];\n      // Draw the text last to ensure it's on top.\n      ctx.fillStyle = \"#000000\";\n      ctx.fillText(prediction.class, x, y);\n    });\n  };\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}